syntax = "proto3";

option go_package = "../proto";

// Hand-coded reverse-engineered protobuf, based on info extracted from Android and iOS Gmail and Google Talk apps
//
// Most messages normally start with DYNProto but that got boring, so I stripped that all out
//
// oneof's have been commented out because they're a pain in the butt with protobuf-c, but I've tried to keep them in there in case other non-silly protobuf libraries want to take advantage of them
//
// Feel free to use this .proto for whatever you want to, under whatever license you want.


enum UserType {
	HUMAN = 0;
	BOT = 1;
}

message UserId {
	string id = 1;
	UserType type = 2;
	//DYNProtoAppId origin_app_id = 3;
}

message User {
	UserId user_id = 1;
	string name = 2;
	string avatar_url = 3;
	string email = 4;
	string first_name = 5;
	string last_name = 6;
	bool deleted = 7;
	bool is_anonymous = 8;
	//DYNProtoBotInfo bot_info = 9;
	string gender = 10;
	//DYNProtoUserAccountState user_account_state = 11;
	//DYNProtoUserProfileVisibility user_profile_visibility = 15;
	//DYNProtoOrganizationInfo organization_info = 12;
	UserBlockRelationship block_relationship = 13;
	//repeated DYNProtoPhoneNumber phone_number = 14;
}

message UserBlockRelationship {
	bool is_blocked_by_requester = 1;
	bool has_blocked_requester = 2;
}

message DndSettings {
	enum DndState_State {
		UNKNOWN = 0;
		AVAILABLE = 1;
		DND = 2;
	}
	DndState_State dnd_state = 1;
	int64 dnd_expiry_time_usec = 2;
	int64 state_remaining_duration_usec = 3;
}

message Emoji {
	oneof Content {
		string unicode = 1;
	}
}

message CustomStatus {
	string status_text = 1;
	string status_emoji = 2;
	int64 state_expiry_timestamp_usec = 3;
	Emoji emoji = 4;
}

message UserStatus {
	UserId user_id = 1;
	DndSettings dnd_settings = 2;
	int64 update_timestamp_usec = 3;
	int64 dnd_settings_update_timestamp_usec = 7;
	int64 status_timestamp_usec = 4;
	bool presence_shared = 5;
	CustomStatus custom_status = 6;
	int64 custom_status_update_timestamp_usec = 8;
}

message UserStatusUpdatedEvent {
	UserStatus user_status = 1;
}

message GetUserStatusRequest {
	repeated UserId user_ids = 1;
	RequestHeader request_header = 100;
}

message GetUserStatusResponse {
	repeated UserStatus user_statuses = 1;
}

message GetSelfUserStatusRequest {
	RequestHeader request_header = 100;
}

message GetSelfUserStatusResponse {
	UserStatus user_status = 1;
	ReadRevision user_revision = 2;
}

message ClientFeatureCapabilities {
	enum CapabilityLevel {
		UNSUPPORTED = 0;
		DATA_SUPPORTED = 1;
		FULLY_SUPPORTED = 2;
	}

	bool enable_all_features = 1;
	CapabilityLevel spaces_level_for_testing = 2;
	CapabilityLevel dms_level_for_testing = 3;
	CapabilityLevel post_rooms_level = 4;
	CapabilityLevel spam_room_invites_level = 5;
	CapabilityLevel tombstone_level = 6;
	CapabilityLevel rich_text_viewing_level = 7;
}

message RequestHeader {
	int64 trace_id = 1;

	enum ClientType {
		UNKNOWN = 0;
		ANDROID = 1;
		IOS = 2;
		WEB = 3;
		CLASSIC_INTEROP = 4;
		INTERNAL_TESTING = 5;
		WEB_DESKTOP = 6;
		WEB_GMAIL = 7;
	}
	ClientType client_type = 2;
	int64 client_version = 3;
	string locale = 4;
	ClientFeatureCapabilities client_feature_capabilities = 5;
}

enum InviteCategory {
	UNKNOWN_INVITE = 0;
	REGULAR_INVITE = 1;
	SPAM_INVITE = 2;
}

message Member {
	oneof Profile {
		User user = 1;
		//Roster roster = 2;
	}
}

message MemberId {
	oneof Id {
		UserId user_id = 1;
		//RosterId roster_id = 2;
	}
}

message MembershipId {
	MemberId member_id = 1;
	SpaceId space_id = 2;
	GroupId group_id = 3;
}

message Membership {
	MembershipId id = 1;
	int64 create_time = 2;
	MembershipState membership_state = 3;
	InviteCategory invite_category = 4;
	MembershipRole membership_role = 5;
}

message MemberProfile {
	MembershipId id = 1;
	Member member = 2;
}

message GetMembersRequest {
	RequestHeader request_header = 100;
	repeated MemberId member_ids = 1;
	repeated MembershipId membership_ids = 2;
}

message GetMembersResponse {
	repeated Member members = 1;
	repeated MemberProfile member_profiles = 2;
}

enum Presence {
	UNDEFINED_PRESENCE = 0;
	ACTIVE = 1;
	INACTIVE = 2;
	UNKNOWN = 3;
	SHARING_DISABLED = 4;
}

enum DndState_State {
	DND_STATE_STATE_UNKNOWN = 0;
	AVAILABLE = 1;
	DND = 2;
}

message UserPresence {
	UserId user_id = 1;
	Presence presence = 2;
	int64 active_until = 4;
	DndState_State dnd_state = 3;
	UserStatus user_status = 5;
}

message GetUserPresenceRequest {
	RequestHeader request_header = 100;
	repeated UserId user_ids = 1;
	bool include_active_until = 2;
	bool include_user_status = 3;
}

message GetUserPresenceResponse {
	repeated UserPresence user_presences = 1;
}

message JAddOnsIdentifier {
	string id = 1;
}

message JAddOnsFormattedText {
	enum TextAlign {
		LEFT = 0;
		CENTER = 1;
		RIGHT = 2;
	}
	message FormattedTextElement {
		message DateTime {
			int64 time_millis = 1;
			int32 time_zone_offset_minutes = 2;
			bool date_only = 3;
			bool floating_time = 4;
		}

		message StyledText {
			enum Style {
				NONE = 0;
				BOLD_DEPRECATED = 1;
				ITALIC = 2;
				UNDERLINE = 3;
				STRIKETHROUGH = 4;
				BR = 5;
				UPPERCASE = 6;
			}
			enum FontWeight {
				REGULAR = 0;
				LIGHT = 1;
				MEDIUM = 2;
				BOLD = 3;
			}

			string text = 1;
			DateTime datetime = 4;
			repeated Style styles = 2;
			FontWeight font_weight = 5;
			int32 color = 3;
			JAddOnsThemeColors theme_colors = 7;
		}

		message HyperLink {
			string link = 1;
			string original_link = 3;
			string text = 2;
		}
		oneof Element {
			StyledText styled_text = 1;
			HyperLink hyperlink = 2;
		}

	}

	JAddOnsIdentifier id = 4;
	string original_text = 1;
	repeated FormattedTextElement formatted_text_elements = 2;
	TextAlign text_align = 3;
}

message JAddOnsImageCropStyle {
	enum ImageCropType {
		CROP_TYPE_NOT_SET = 0;
		SQUARE = 1;
		CIRCLE = 2;
		RECTANGLE_CUSTOM = 3;
		RECTANGLE_4_3 = 4;
	}

	ImageCropType type = 1;
	double aspect_ratio = 2;
}

message JAddOnsThemeColors {
	int32 light_theme_color = 1;
	int32 dark_theme_color = 2;
}

message JAddOnsOpenLink {
	enum OpenAs {
		FULL_SIZE = 0;
		OVERLAY = 1;
	}
	enum OnClose {
		NOTHING = 0;
		RELOAD_ADD_ON = 1;
	}
	enum LoadIndicator {
		NONE = 0;
		SPINNER = 1;
	}

	string url = 1;
	string original_link = 5;
	OpenAs open_as = 2;
	OnClose on_close = 3;
	LoadIndicator load_indicator = 4;
}

message JAddOnsCardItem {
	message CardItemHeader {
		JAddOnsFormattedText title = 1;
		JAddOnsFormattedText subtitle = 2;
		JAddOnsImageCropStyle.ImageCropType image_style = 3;
		string image_url = 4;
		string image_alt_text = 5;
	}
	message CardItemSection {
		JAddOnsIdentifier id = 6;
		string description = 1;
		JAddOnsFormattedText header = 5;
		repeated JAddOnsWidget widgets = 2;
		bool collapsable = 3;
		int32 num_uncollapsable_widgets = 4;
	}
	message CardItemAction {
		string action_label = 1;
		JAddOnsOnClick on_click = 2;
	}
	message CardItemFixedFooter {
		repeated JAddOnsWidget.Button buttons = 1;
		JAddOnsWidget.TextButton primary_button = 2;
		JAddOnsWidget.TextButton secondary_button = 3;
	}
	message CardItemRefreshAction {
		JAddOnsFormAction method = 1;
	}
	enum DisplayStyle {
		DISPLAY_STYLE_UNSPECIFIED = 0;
		PEEK = 1;
		REPLACE = 2;
	}

	CardItemHeader header = 1;
	repeated CardItemSection sections = 2;
	repeated CardItemAction card_actions = 3;
	string name = 4;
	CardItemFixedFooter fixed_footer = 5;
	CardItemRefreshAction refresh_action = 6;
	DisplayStyle display_style = 7;
	CardItemHeader peek_card_header = 8;
	JAddOnsThemeColors background_theme_colors = 9;
}

message JAddOnsPushCard {
	JAddOnsCardItem card = 1;
}

message JAddOnsOnClick {
	oneof DataCase {
		string link = 1;
		JAddOnsFormAction action = 2;
		JAddOnsOpenLink open_link = 5;
		JAddOnsFormAction open_link_action = 7;
		JAddOnsPushCard push_card = 8;
	//	ComGoogleAppsExtensionsV1HostAppAction host_app_action = 9;
	}
}

message JAddOnsTextWidget {
	repeated string line = 1;
}

message JAddOnsImageComponent {
	string image_url = 1;
	string alt_text = 2;
	JAddOnsImageCropStyle crop_style = 3;
	JAddOnsBorderStyle border_style = 4;
}

message JAddOnsGrid {
	message GridItem {
		enum GridItemLayout {
			NOT_SET = 0;
			TEXT_BELOW = 1;
			TEXT_ABOVE = 2;
		}

		string identifier = 1;
		JAddOnsImageComponent image = 2;
		string title = 3;
		string subtitle = 4;
		JAddOnsWidget.HorizontalAlign text_alignment = 5;
		GridItemLayout layout = 9;
		JAddOnsOnClick on_click = 10;
	}

	JAddOnsIdentifier id = 1;
	string title = 2;
	repeated GridItem items = 3;
	JAddOnsBorderStyle border_style = 4;
	int32 num_columns = 5;
	JAddOnsOnClick on_click = 6;
}

message JAddOnsBorderStyle {
	enum BorderType {
		BORDER_TYPE_NOT_SET = 0;
		NO_BORDER = 1;
		STROKE = 2;
	}

	BorderType type = 1;
	JAddOnsThemeColors stroke_color = 2;
	int32 corner_radius = 3;
}

message JAddOnsLabelContentPair {
	string label = 1;
	string content = 2;
}

message JAddOnsLabelContentPairWidget {
	repeated JAddOnsLabelContentPair label_content_pair = 1;
}

message JAddOnsWidget {
	message TextParagraph {
		JAddOnsFormattedText text = 1;
	}
	message TextKeyValue {
		JAddOnsFormattedText key = 1;
		JAddOnsFormattedText text = 2;
		JAddOnsOnClick on_click = 3;
	}
	message ImageKeyValue {
		string icon_url = 1;
		JAddOnsFormattedText text = 2;
		JAddOnsOnClick on_click = 3;
	}
	message Image {
		JAddOnsIdentifier id = 5;
		string fife_image_url = 1;
		JAddOnsOnClick on_click = 2;
		double aspect_ratio = 3;
		string alt_text = 4;
	}
	message Icon {
		string icon_url = 1;
		string alt_text = 2;
		JAddOnsImageCropStyle.ImageCropType image_style = 3;
	}
	message KeyValue {
		message SwitchWidget {
			enum ControlType {
				UNSPECIFIED = 0;
				SWITCH = 1;
				CHECKBOX = 2;
			}
			JAddOnsIdentifier id = 5;
			string name = 1;
			string value = 2;
			bool selected = 3;
			JAddOnsFormAction on_change = 4;
			ControlType control_type = 6;
		}
		string icon_url = 1;
		string icon_alt_text = 9;
		JAddOnsImageCropStyle.ImageCropType image_style = 10;
		Icon start_icon = 11;
		JAddOnsFormattedText top_label = 2;
		JAddOnsFormattedText content = 3;
		bool content_multiline = 8;
		JAddOnsFormattedText bottom_label = 4;
		JAddOnsOnClick on_click = 5;
		oneof Control {
			Button button = 6;
			SwitchWidget switch_widget = 7;
			Icon end_icon = 12;
		}
	}
	message Divider {
		// This protobuf intentionally left blank
	}
	message Menu {
		message MenuItem {
			string text = 1;
			string value = 4;
			bool selected = 3;
		}
		string name = 1;
		repeated MenuItem items = 2;
		JAddOnsFormAction on_change = 4;
		string label = 5;
	}
	message AutoComplete {
		message AutoCompleteItem {
			string text = 1;
		}
		repeated AutoCompleteItem items = 1;
	}
	message TextField {
		enum TextFieldType {
			REGULAR = 0;
			FLOATING = 1;
		}
		enum LineType {
			SINGLE = 0;
			MULTIPLE = 1;
		}
		JAddOnsIdentifier id = 11;
		string name = 1;
		int32 max_lines = 2;
		TextFieldType type = 5;
		string label = 3;
		string hint_text = 4;
		string value = 6;
		LineType line_type = 7;
		JAddOnsFormAction on_change = 8;
		AutoComplete auto_complete = 9;
		JAddOnsFormAction auto_complete_callback = 10;
		bool auto_complete_multiple_selections = 12;
	}
	message SelectionControl {
		enum SelectionType {
			CHECK_BOX = 0;
			RADIO_BUTTON = 1;
			SWITCH = 2;
			DROPDOWN = 3;
		}
		message SelectionItem {
			JAddOnsIdentifier id = 4;
			string text = 1;
			bool selected = 2;
			string value = 3;
		}

		JAddOnsIdentifier id = 6;
		string name = 1;
		SelectionType type = 2;
		repeated SelectionItem items = 3;
		JAddOnsFormAction on_change = 4;
		string label = 5;
	}
	message DateTimePicker {
		enum DateTimePickerType {
			UNSPECIFIED_TYPE = 0;
			DATE_AND_TIME = 1;
			DATE_ONLY = 2;
			TIME_ONLY = 3;
		}

		string name = 1;
		string label = 2;
		DateTimePickerType type = 3;
		int64 value_ms_epoch = 4;
		int32 timezone_offset_date = 5;
		JAddOnsFormAction on_change = 6;
		int32 color = 7;
		JAddOnsThemeColors theme_colors = 8;
	}
	message TextButton {
		enum Style {
			UNSPECIFIED = 0;
			TEXT = 1;
			FILLED = 2;
		}
		JAddOnsIdentifier id = 3;
		JAddOnsFormattedText text = 1;
		JAddOnsOnClick on_click = 2;
		bool disabled = 4;
		Style style = 5;
		int32 background_color = 6;
		JAddOnsThemeColors background_theme_colors = 7;
		string alt_text = 8;
	}

	message ImageButton {
		JAddOnsIdentifier id = 4;
		string icon_url = 1;
		JAddOnsOnClick on_click = 2;
		string name = 3;
	}

	message Button {
		oneof Type {
			TextButton text_button = 1;
			ImageButton image_button = 2;
		}
	}

	enum HorizontalAlign {
		NOT_SET = 0;
		START = 1;
		CENTER = 2;
		END = 3;
	}


	oneof Data {
		JAddOnsTextWidget text_widget = 1;
		JAddOnsLabelContentPairWidget label_content_pair_widget = 2;
		TextParagraph text_paragraph = 3;
		TextKeyValue text_key_value = 4;
		ImageKeyValue image_key_value = 5;
		Image image = 9;
		KeyValue key_value = 13;
		Divider divider = 16;
		JAddOnsGrid grid = 17;
		Menu menu = 10;
		TextField text_field = 11;
		SelectionControl selection_control = 12;
		DateTimePicker date_time_picker = 14;
	}
	repeated Button buttons = 8;
	HorizontalAlign horizontal_align = 15;

}


message JAddOnsFormAction {
	message ActionParameter {
		string key = 1;
		string value = 2;
	}
	enum LoadIndicator {
		SPINNER = 0;
		NONE = 1;
	}

	string action_method_name = 1;
	repeated ActionParameter parameters = 4;
	repeated string parameters_deprecated = 3;
	string encrypted_action = 7;
	LoadIndicator load_indicator = 5;
	bool persist_values = 6;
}

message JAddOnsContextualAddOn {
	message Toolbar {
		JAddOnsFormattedText name = 1;
		string icon_url = 2;
		int32 color = 3;
		JAddOnsThemeColors theme_colors = 4;
	}

	Toolbar toolbar = 1;

	message Card {
		message CardHeader {
			JAddOnsFormattedText title = 1;
			JAddOnsFormattedText subtitle = 2;
			JAddOnsImageCropStyle.ImageCropType image_style = 3;
			string image_url = 4;
			string image_alt_text = 5;
		}
		CardHeader header = 1;

		message Section {
			JAddOnsIdentifier id = 6;
			string description = 1;
			JAddOnsFormattedText header = 5;
			repeated JAddOnsWidget widgets = 2;
			bool collapsable = 3;
			int32 num_uncollapsable_widgets = 4;
		}
		repeated Section sections = 2;

		message CardAction {
			string action_label = 1;
			JAddOnsOnClick on_click = 2;
		}
		repeated CardAction card_actions = 3;

		string name = 4;

		message FixedFooter {
			repeated JAddOnsWidget.Button buttons = 1;
			JAddOnsWidget.TextButton primary_button = 2;
			JAddOnsWidget.TextButton secondary_button = 3;
		}
		FixedFooter fixed_footer = 5;

		message RefreshAction {
			JAddOnsFormAction method = 1;
		}
		RefreshAction refresh_action = 6;

		JAddOnsThemeColors background_theme_colors = 7;
	}

	repeated Card cards = 2;
}

message Html { //ComGoogleCommonHtmlTypesSafeHtmlProto
	//private_do_not_access_or_else_safe_html_wrapped_value
	string html = 2;
}

message HtmlAttachment {
	Html html = 2;
}

message Attachment {
	oneof Type {
		HtmlAttachment html = 1;
		JAddOnsContextualAddOn add_on_data = 2;
	}
	UserId app_id = 5;
	User app_user = 6;
}

message Reaction {
	Emoji emoji = 1;
	int32 count = 2;
	bool current_user_participated = 3;
	int64 create_timestamp = 4;
}

message MessageParentId {
	oneof Parent {
		TopicId topic_id = 4;
	}
}

message MessageId {
	MessageParentId parent_id = 1;
	string message_id = 2;
}

message Message {
	MessageId id = 1;

	enum MessageState {
		UNKNOWN = 0;
		GROUP_VISIBLE = 1;
		ON_HOLD = 2;
	}
	MessageState message_state = 20;
	User creator = 2;
	int64 create_time = 3;
	int64 last_update_time = 4;
	int64 delete_time = 8;
	int64 last_edit_time = 17;
	string text_body = 10;
	repeated Annotation annotations = 11;
	//repeated DYNProtoBotResponse bot_responses = 19;
	string local_id = 14;
	repeated Attachment attachments = 15;
	AppProfile app_profile = 16;
	RetentionSettings retention_settings = 18;
	repeated Reaction reactions = 21;
	//repeated DYNProtoCommunalLabelTag communal_labels = 27;
	//repeated DYNProtoPersonalLabelTag personal_labels = 26;
	//?? message_integration_payload = 23;
	//DYNProtoMessage_MessagePermission editable_by = 24;
	//DYNProtoMessage_MessagePermission deletable_by = 25;
	int64 last_reply_time = 5;
	int64 last_view_time = 6;
	int64 last_mention_time = 7;
	int64 num_unread_replies = 9;
	Message last_reply = 12;
	int64 sort_time = 13;

	enum MessageType {
		MESSAGE_TYPE_UNSPECIFIED = 0;
		USER_MESSAGE = 1;
		SYSTEM_MESSAGE = 2;
	}
	MessageType message_type = 28;
	//DYNProtoAppId origin_app_id = 29;
	Membership creator_membership = 30;
	//DYNProtoMessageAttributes attributes = 31;
	//?? tombstone_metadata = 32;
	ReplyToMessage reply_to = 37;
}

message ReplyToMessage {
	MessageId id = 1;
	int64 create_time = 2;
	UserId sender_id = 4;
	User sender = 5;
	string text_body = 6;
	int32 unknown_int = 10;
	User sender_again = 12;
	int64 last_edit_time = 13;
	int64 create_time_again_if_edited = 14;
}

message AppProfile {
	string displayname = 1;
	string avatar_url = 2;
}

message DriveMetadata {
	string id = 1;
	string title = 2;
	string thumbnail_url = 3;
	int32 thumbnail_width = 7;
	int32 thumbnail_height = 8;
	string mimetype = 4;
	string external_mimetype = 14;
	string organization_display_name = 13;
	bool encrypted_doc_id = 10;
	string url_fragment = 16;
	TrustedResourceUrl embed_url = 18;
	bool is_owner = 19;
	bool can_share = 5;
	bool can_edit = 15;
	bool can_view = 6;
	//DriveState drive_state = ;
	bool should_not_render = 9;
	bool is_download_restricted = 17;
}

//ComGoogleCommonHtmlTypesSafeUrlProto
message Url {
	//private_do_not_access_or_else_safe_url_wrapped_value
	string url = 3;
}

//ComGoogleCommonHtmlTypesTrustedResourceUrlProto
message TrustedResourceUrl {
	//private_do_not_access_or_else_trusted_resource_url_wrapped_value
	string resource_url = 4;
}

message YoutubeMetadata {
	string id = 1;
	//int/bool ??? = 2;
	//bool should_not_render = 3?
}

message UrlMetadata {
	string title = 1;
	string snippet = 2;
	string image_url = 3;
	string image_height = 4;
	string image_width = 5;
	Url url = 7;
	Url gws_url = 13;
	Url redirect_url = 14;
	int64 gws_url_expiration_timestamp = 15;
	string domain = 8;
	bool should_not_render = 9;
	int32 int_image_height = 10;
	int32 int_image_width = 11;
	string mime_type = 12;
}

message UploadMetadata {
	oneof Payload {
		string attachment_token = 1;
		//BackendUploadMetadata backend_upload_metadata = 2;
	}
	string content_name = 3;
	string content_type = 4;
	//Dimension original_dimension = 5;
	string local_id = 6;
	// VideoReference video_reference = 7;
	// VirusScanResult virus_scan_result = 8;
	string cloned_drive_id = 9;
	// DriveAction cloned_drive_action = 10;
	// ComGoogleAppsDriveStorageApiAuthorizedItemId cloned_authorized_item_id = 11;
}

message FormatMetadata {
	enum FormatType {
		TYPE_UNSPECIFIED = 0;
		BOLD = 1;
		ITALIC = 2;
		STRIKE = 3;
		SOURCE_CODE = 4;
		MONOSPACE = 5;
		HIDDEN = 6;
		MONOSPACE_BLOCK = 7;
		UNDERLINE = 8;
		FONT_COLOR = 9;
		BULLETED_LIST = 10;
		BULLETED_LIST_ITEM = 11;
		CLIENT_HIDDEN = 12;
	}
	FormatType format_type = 1;
	uint32 font_color = 2;
}

message Annotation {
	AnnotationType type = 1;
	int32 start_index = 2;
	int32 length = 3;
	string local_id = 9;
	string unique_id = 19;

	enum ChipRenderType {
		UNKNOWN = 0;
		RENDER = 1;
		RENDER_IF_POSSIBLE = 2;
		DO_NOT_RENDER = 3;
	}
	ChipRenderType chip_render_type = 20;
	bool server_invalidated = 13;

	oneof Metadata {
		UserMentionMetadata user_mention_metadata = 5;
		FormatMetadata format_metadata = 8;
		SlashCommandMetadata slash_command_metadata = 15;
		DriveMetadata drive_metadata = 4;

		YoutubeMetadata youtube_metadata = 6;
		UrlMetadata url_metadata = 7;
		UploadMetadata upload_metadata = 10;
		MembershipChangedMetadata membership_changed = 11;
		VideoCallMetadata video_call_metadata = 12;
		RoomUpdatedMetadata room_updated = 14;
		//DYNProtoGsuiteIntegrationMetadata gsuite_integration_metadata = 16;
		//DYNProtoGroupRetentionSettingsUpdatedMetaData group_retention_settings_updated = 17;
		//DYNProtoBabelPlaceholderMetadata babel_placeholder_metadata = 18
		//DYNProtoReadReceiptsSettingsUpdatedMetadata read_receipts_settings_metadata = 21;
		//DYNProtoIncomingWebhookChangedMetadata incoming_webhook_changed_metadata = 22;
		//DYNProtoIntegrationConfigUpdatedMetadata integration_config_updated = 23;
		//DYNProtoConsentedAppUnfurlMetadata consented_app_unfurl_metadata = 24;
	}
}

enum TypingState {
	UNKNOWN_STATE = 0;
	TYPING = 1;
	STOPPED = 2;
}

message TypingContext {
	oneof Context {
		GroupId group_id = 1;
		TopicId topic_id = 2;
	}
}

message SetTypingStateRequest {
	RequestHeader request_header = 100;
	TypingState state = 1;
	TypingContext context = 2;
}

message SetTypingStateResponse {
	int64 start_timestamp_usec = 1;
}

message DmId {
	string dm_id = 1;
}

message SpaceId {
	string space_id = 1;
}

message GroupId {
	oneof Id {
		SpaceId space_id = 1;
		DmId dm_id = 3;
	}
}

message Group {
	GroupId group_id = 1;
	string name = 2;
	User creator = 4;
	int64 create_time = 5;
	int64 last_modified_time = 6;
	int64 sort_time = 7;
	int64 revision_time = 13;
	GroupReadState group_read_state = 12;
	int64 retention_horizon_time = 14;
	//DYNProtoDasherDomainPolicies dasher_domain_policies = 15;
	//?? group_policies = 40;
	RetentionSettings retention_settings = 16;
	bool is_flat = 17;
	bool interop_enabled = 18;
	int64 retention_duration_seconds = 19;
	//DYNProtoGroupGuestAccessSettings group_guest_access_settings = 20;
	//DYNProtoOrganizationInfo organization_info = 21;

	enum GroupType {
		GROUP_TYPE_UNSPECIFIED = 0;
		ROOM = 1;
		HUMAN_DM = 2;
		BOT_DM = 3;
	}
	GroupType group_type = 22;

	GroupVisibility visibility = 23;
	//repeated DYNProtoGsuiteIntegration gsuite_integration = 24;
	string roster_email = 25;

	message FlatGroup {}
	message ThreadedGroup {}
	oneof ThreadedModel {
		FlatGroup flat_group = 26;
		ThreadedGroup threaded_group = 27;
	}

	string avatar_url = 28;
	//DYNProtoGroupIntegrationSettings group_integration_settings = 36;
	//repeated ?? space_integration_payloads = 29;
	//DYNProtoAvatarInfo avatar_info = 30;
	SharedAttributeCheckerGroupType attribute_checker_group_type = 33;
	NameUsers name_users = 34;
	GroupDetails group_details = 37;
	GroupSupportLevel group_support_level = 38;
	GroupUnsupportedReason group_unsupported_reason = 39;
	//DYNProtoHubGroupProperties hub_group_properties = 41;
	//?? ufr_upgrade_info = 42;
	bool typing_indicators_enabled = 43;
	bool flat_threads_enabled = 44;
}

enum GroupUnsupportedReason {
	GROUP_UNSUPPORTED_REASON_UNSPECIFIED = 0;
	GROUP_DISABLED_ON_CLIENT = 1;
	GROUP_DISABLED_ON_SERVER = 2;
}

enum GroupSupportLevel {
	UNSUPPORTED = 0;
	DATA_SUPPORTED = 1;
	FULLY_SUPPORTED = 2;
}

message GroupReadStateId {
	UserId user_id = 1;
	GroupId group_id = 2;
}

message InviteState {
	UserId inviter_user_id = 1;
	MessageId invitation_message_id = 2;
	bool show_welcome_mat = 3;
	InviteType invite_type = 5;
}

message GroupReadState {
	GroupReadStateId id = 1;
	int64 last_read_time = 2;
	int64 unread_message_count = 4;
	bool starred = 5;
	int64 update_timestamp = 6;
	int64 unread_subscribed_topic_count = 7;
	int64 unread_subscribed_topic_count_consistency_timestamp = 11;
	repeated TopicId unread_subscribed_topics = 8;
	int64 hide_timestamp = 9;
	int64 clear_history_timestamp = 14;
	InviteState invite_state = 10;
	GroupNotificationSettings notification_settings = 12;
	RetentionSettings retention_settings = 13;
	bool blocked = 15;
	MembershipRole membership_role = 22;
	MembershipState membership_state = 16;
	InviteCategory invite_category = 17;
	int64 mark_as_unread_timestamp_usec = 18;
	bool visible_in_world_view = 19;
	bool show_notification_card_in_stream = 20;
	//NotificationsCard notifications_card = 21;
	repeated UserId joined_users = 23;
}

message GroupNotificationSettings {
	enum GroupNotificationState {
		UNKNOWN_NOTIFICATION_STATE = 0;
		MUTED = 1;
		UNMUTED = 2;
	}
	GroupNotificationState state = 1;

	enum RoomNotificationState {
		NOTIFY_ALWAYS = 0;
		NOTIFY_LESS_WITH_NEW_THREADS = 1;
		NOTIFY_LESS = 2;
		NOTIFY_NEVER = 3;
	}
	RoomNotificationState room_state = 2;
}

message RetentionSettings {
	enum RetentionState {
		UNKNOWN_RETENTION_STATE = 0;
		PERMANENT = 1;
		EPHEMERAL_ONE_DAY = 2;
	}
	RetentionState state = 1;
	int64 expiry_timestamp = 2;
}

message GroupData {
	RetentionSettings.RetentionState retention_state = 1;
}

message TopicId {
	GroupId group_id = 3;
	string topic_id = 2;
}

message Topic {
	TopicId id = 1;
	int64 sort_time = 2;
	int64 create_time_usec = 15;
	repeated Message replies = 7;
	TopicReadState topic_read_state = 11;
	bool is_system_message = 12;
	RetentionSettings retention_settings = 13;
	bool contains_more_unread_replies = 14;
}

message TopicReadState {
	int64 thread_created_usec = 2;
}

message SendReplyTarget {
	MessageId id = 1;
	int64 create_time = 2;
}

message MessageInfo {
	bool accept_format_annotations = 1;
	SendReplyTarget reply_to = 3;
}

message CreateTopicRequest {
	RequestHeader request_header = 100;
	GroupId group_id = 5;
	string text_body = 2;
	repeated Annotation annotations = 3;
	RetentionSettings retention_settings = 6;
	string local_id = 4;
	string topic_and_message_id = 7;
	bool history_v2 = 8;
	MessageInfo message_info = 9;
}

message CreateTopicResponse {
	Topic topic = 1;
	WriteRevision group_revision = 2;
	ReadRevision current_group_revision = 3;
}

message CreateMessageRequest {
	RequestHeader request_header = 100;
	MessageParentId parent_id = 1;
	string text_body = 2;
	repeated Annotation annotations = 3;
	string local_id = 4;
	string message_id = 6;
	MessageInfo message_info = 7;
}

message CreateMessageResponse {
	Message message = 1;
	WriteRevision group_revision = 3;
	ReadRevision current_group_revision = 4;
}

message UpdateReactionRequest {
	RequestHeader request_header = 100;
	MessageId message_id = 1;
	Emoji emoji = 2;
	enum ReactionUpdateType {
		UNSPECIFIED = 0;
		ADD = 1;
		REMOVE = 2;
	}
	ReactionUpdateType type = 3;
}

message UpdateReactionResponse {
	WriteRevision group_revision = 1;
}

message DeleteMessageRequest {
	RequestHeader request_header = 100;
	MessageId message_id = 1;
}

message DeleteMessageResponse {
	WriteRevision group_revision = 3;
	int64 group_sort_time = 4;
	int64 topic_sort_time = 5;
	//bool delete_inline_replies = 7;
}

message EditMessageRequest {
	RequestHeader request_header = 100;
	MessageId message_id = 1;
	string text_body = 2;
	repeated Annotation annotations = 3;
	MessageInfo message_info = 5;
}

message EditMessageResponse {
	Message message = 1;
	WriteRevision group_revision = 3;
}

message InviteeInfo {
	UserId user_id = 1;
	string email = 2;
}

message InviteeMemberInfo {
	oneof Id {
		InviteeInfo invitee_info = 1;
		// RosterId roster_id = 2;
	}
}

message SpaceCreationInfo {
	string name = 1;
	// GroupGuestAccessSettings group_guest_access_settings = 3;
	GroupVisibility visibility = 4;

	message FlatGroup {

	}
	FlatGroup flat_group = 5;

	message ThreadedGroup {

	}
	ThreadedGroup threaded_group = 6;

	bool has_server_generated_name = 7;
	repeated InviteeMemberInfo invitee_member_infos = 8;
	// RoomInviteNotificationSettings notification_settings = 9;
	// AvatarInfo avatar_info = 10;

	message SpaceType {

	}
	SpaceType space_type = 11;

	// ?? space_details = 12;
	SharedAttributeCheckerGroupType attribute_checker_group_type = 13;
	string shared_drive_name = 14;
}

message CreateGroupRequest {
	RequestHeader request_header = 100;
	oneof CreationInfo {
		SpaceCreationInfo space = 1;
	}
	string local_id = 3;
	bool should_find_existing_space = 4;
}

message CreateMembershipResult {
	Membership membership = 1;
	// FailureReason reason = 2;
	// repeated SupplementalReason supplemental_reasons = 3;
}

message CreateGroupResponse {
	Group group = 1;
	WriteRevision group_revision = 2;
	WriteRevision user_revision = 3;
	repeated CreateMembershipResult results = 4;
	// Failure creator_membership_failure = 5;
}

message CreateDmRequest {
	RequestHeader request_header = 100;
	enum FetchOptions {
		UNKNOWN = 0;
		INCLUDE_BOT_MEMBERSHIPS_IN_RESPONSE = 1;
	}
	repeated FetchOptions fetch_options = 8;
	repeated UserId members = 1;
	repeated InviteeInfo invitees = 7;
	// MessageCreationInfo message_creation_info = 2;
	RetentionSettings retention_settings = 3;
	string local_id = 4;
	string topic_and_message_id = 5;
}

message CreateDmResponse {
	Group dm = 1;
	Topic topic = 2;
	WriteRevision group_revision = 3;
	repeated Membership memberships = 4;
}

message ListTopicsResponse {
	repeated Topic topics = 1;
	ReadRevision user_revision = 2;
	ReadRevision group_revision = 3;
	bool contains_first_topic = 4;
	bool contains_last_topic = 5;
	ReadReceiptSet read_receipt_set = 6;
}

message ListTopicsRequest {
	RequestHeader request_header = 100;
	GroupId group_id = 8;
	int32 page_size_for_topics = 2;
	int32 page_size_for_unread_replies = 6;
	int32 page_size_for_read_replies = 7;
	int32 page_size_for_replies = 3;
	//DYNProtoListTopicsRequest_Filter filter = 4;

	enum FetchOptions {
		UNSPECIFIED = 0;
		USER = 1;
		TOTAL_MESSAGE_COUNTS = 2;
		READ_RECEIPTS = 3;
	}
	repeated FetchOptions fetch_options = 5;
	ReferenceRevision user_not_older_than = 9;
	ReferenceRevision group_not_older_than = 10;
	//DYNProtoListTopicsRequest_SortOption sort_option = 11;
}

message ListMessagesRequest {
	RequestHeader request_header = 100;
	MessageParentId parent_id = 1;
	int32 page_size = 2;
	//ReferenceRevision not_older_than = ?;
	//bool is_search = ?;
	//Filter filter = ?;
}

message ListMessagesResponse {
	repeated Message messages = 1;
	ReadRevision group_revision = 2;
	//bool contains_first_message = 3;
	//bool contains_last_message = 4;
}

message ListMembersRequest {
	RequestHeader request_header = 100;
	SpaceId space_id = 1;
	GroupId group_id = 5;
	// repeated FetchOptions fetch_options = 2;
	// Filter filter = 7;
	int32 page_size = 3;
	string page_token = 4;
	ReferenceRevision not_older_than = 6;
}

message ListMembersResponse {
	repeated Membership memberships = 1;
	repeated Member members = 2;
	repeated MemberId member_ids = 5;
	string next_page_token = 3;
	ReadRevision group_revision = 4;
	repeated MemberId invited_member_ids = 6;
}

message ReadReceipt {
	int64 read_time_micros = 2;
	User user = 3;
}

message ReadReceiptSet {
	bool enabled = 1;
	repeated ReadReceipt read_receipts = 2;
}

enum NotificationCause {
	UNKNOWN_NOTIFICATION_CAUSE = 0;
	DIRECT_MESSAGE = 1;
	AT_MENTION = 2;
	NEW_TOPIC = 3;
	SUBSCRIBED_TOPIC_REPLY = 4;
	UNSUBSCRIBED_TOPIC_REPLY = 5;
}

message WebPushNotification {
	Message message = 1;
	string sender_name = 2;
	string sender_avatar_url = 3;
	string group_name = 4;
	NotificationCause cause = 5;
}

message AndroidLocalNotification {
	string thread_id = 1;
	string type_id = 2;
	string group_name = 3;
	string text_body = 6;
	string icon_url = 4;
	// ComGoogleProtobufAny chime_notification_payload = 5;
	string title = 7;
	string group_id = 8;
	string sub_text = 9;
}

message IosLocalNotification {
	string apns_collapse_id = 1;
	string thread_id = 2;
	string title = 3;
	string body = 4;
	string category = 5;
	bool group_is_flat = 6;
	bool message_is_off_the_record = 7;
	SharedAttributeCheckerGroupType attribute_checker_group_type = 9;
	string navigation = 8;
}

message MobileLocalNotification {
	AndroidLocalNotification android_local_notification = 1;
	IosLocalNotification ios_local_notification = 2;
}


message MessageEvent {
	Message message = 1;
	int64 last_message_in_topic_time = 4;
	int64 prev_revision_time = 5;
	bool is_head_message = 6;
}

message MessageReactionEvent {
	MessageId message_id = 1;
	Emoji emoji = 2;
	UserId user_id = 3;
	int64 timestamp = 4;
	enum ReactionEventType {
		UNSPECIFIED = 0;
		ADD = 1;
		REMOVE = 2;
	}
	ReactionEventType type = 5;
}

message MessageDeletedEvent {
	MessageId message_id = 1;
	int64 timestamp = 2;
	//int64 ??? = 3;
	//string another_message_id = 4;
	//int64 ??? = 6;
}

message TypingStateChangedEvent {
	TypingState state = 1;
	UserId user_id = 2;
	TypingContext context = 3;
	int64 start_timestamp_usec = 4;
}

message MembershipChangedEvent {
	Membership new_membership = 1;
	MembershipState prior_membership_state = 2;
	MembershipRole prior_membership_role = 3;
}

message ReadReceiptChangedEvent {
	GroupId group_id = 1;
	ReadReceiptSet read_receipt_set = 2;
}

message GroupViewedEvent {
	GroupId group_id = 1;
	int64 view_time = 2;
}

message GroupUpdatedEvent {
	Group new = 1;
	Group old = 2;
	enum UpdateType {
		UPDATE_TYPE_UNKNOWN = 0;
		CREATED = 1;
		UPDATED = 2;
		DELETED = 3;
		UNDELETED = 4;
	}
	UpdateType update_type = 4;
}

message WebPushNotificationEvent {
	enum DispatchApproachType {
		DISPATCH_APPROACH_TYPE_UNSPECIFIED = 0;
		INTERACTIVE_SESSION = 1;
		BROADCAST_TO_WEB_SESSIONS = 2;
		INTERACTIVE_SESSIONS_INCLUDE_VISIBLE_WEB_UNDER_TTL = 3;
	}
	enum EndpointType {
		ENDPOINT_TYPE_UNSPECIFIED = 0;
		MOBILE_WEBCHANNEL = 1;
		DESKTOP_WEBCHANNEL = 2;
	}

	WebPushNotification notification = 1;
	DispatchApproachType dispatch_approach_type = 2;
	MobileLocalNotification mobile_local_notification = 3;
	repeated EndpointType endpoint_types = 4;
}


// used in the /webchannel/events
message StreamEventsRequest {
	Platform platform = 4;
	ClientInfo client_info = 5;
	int64 client_session_id = 6;
	string sample_id = 1;
	repeated string sample_ids = 7;
	PingEvent ping_event = 2;
	ClockSyncRequest clock_sync_request = 3;
	GroupSubscriptionEvent group_subscription_event = 8;
	int64 test_user_gaia_id = 100;
}

enum EventOrigin {
	ORIGIN_UNSPECIFIED = 0;
	ANDROID = 100;
	ANDROID_DEV = 101;
	ANDROID_PRODTEST = 102;
	ANDROID_STAGING = 103;
	ANDROID_PROD = 104;
	IOS = 110;
	IOS_DEV = 111;
	IOS_PRODTEST = 112;
	IOS_STAGING = 113;
	IOS_PROD = 114;
	WEB_ORIGIN = 120;
	WEB_DEV = 121;
	WEB_PRODTEST = 122;
	WEB_PROD = 123;
	WEB_STAGING = 124;
	DESKTOP_ORIGIN = 125;
	DESKTOP_DEV = 126;
	DESKTOP_PRODTEST = 127;
	DESKTOP_STAGING = 128;
	DESKTOP_PROD = 129;
	COMPANION_ORIGIN = 130;
	COMPANION_DEV = 131;
	COMPANION_PRODTEST = 132;
	COMPANION_STAGING = 133;
	COMPANION_PROD = 134;
	WEB_GMAIL_ORIGIN = 135;
	WEB_GMAIL_DEV = 136;
	WEB_GMAIL_PRODTEST = 137;
	WEB_GMAIL_STAGING = 138;
	WEB_GMAIL_PROD = 139;
	WEB_PWA_ORIGIN = 140;
	WEB_PWA_DEV = 141;
	WEB_PWA_PRODTEST = 142;
	WEB_PWA_STAGING = 143;
	WEB_PWA_PROD = 144;
}

message ClientInfo {
	Platform platform = 1;
	EventOrigin origin = 2;
	string source_machine = 3;
}

message ClientNotificationsState {
	enum DeviceNotificationSettingState {
		DEVICE_NOTIFICATION_SETTING_STATE_UNKNOWN = 0;
		DEVICE_NOTIFICATIONS_ENABLED = 1;
		DEVICE_NOTIFICATIONS_DISABLED = 2;
	}
	DeviceNotificationSettingState device_setting_state = 1;
}

message PingEvent {
	enum State {
		STATE_UNSPECIFIED = 0;
		ACTIVE = 1;
		INACTIVE = 2;
	}
	State state = 1;

	enum ApplicationFocusState {
		FOCUS_STATE_UNSPECIFIED = 0;
		FOCUS_STATE_FOREGROUND = 1;
		FOCUS_STATE_BACKGROUND = 2;
	}
	ApplicationFocusState application_focus_state = 3;

	int64 last_interactive_time_ms = 4;

	enum ClientInteractiveState {
		UNKNOWN = 0;
		INTERACTIVE = 1;
		FOCUSED = 2;
		VISIBLE = 3;
		HIDDEN = 4;
	}
	ClientInteractiveState client_interactive_state = 5;

	bool client_notifications_enabled = 6;

	ClientNotificationsState notifications_state = 7;
	bool pwa_dedupe_enabled = 8;

	enum DeviceActiveState {
		STATE_UNKNOWN = 0;
		STATE_IDLE_LOCKED = 1;
		STATE_IDLE_UNLOCKED = 2;
		STATE_ACTIVE = 3;
	}
	DeviceActiveState device_active_state = 9;

	// ??ComGoogleProtobufDuration web_inactivity_timeout = 10;
}

message ClockSyncRequest {
	int64 origin_time_msec = 1;
}

message ClockSyncResponse {
	int64 origin_time_msec = 1;
	int64 receive_time_msec = 2;
	int64 transmit_time_msec = 3;
}

message GroupSubscriptionEvent {
	repeated GroupId group_ids = 1;
}

// echo "<base64 encoded stream response>" | base64 -d - | protoc --decode StreamEventsResponse googlechat.proto
message StreamEventsResponse {
	Event event = 1;
	string sample_id = 2;
	ClockSyncResponse clock_sync_response = 3;
}

message Event {
	GroupId group_id = 1;

	enum EventType {
		UNKNOWN = 0;
		USER_ADDED_TO_GROUP = 1;
		USER_REMOVED_FROM_GROUP = 2;
		GROUP_VIEWED = 3;
		TOPIC_VIEWED = 4;
		GROUP_UPDATED = 5;
		MESSAGE_POSTED = 6;
		MESSAGE_UPDATED = 7;
		MESSAGE_DELETED = 8;
		TOPIC_MUTE_CHANGED = 9;
		USER_SETTINGS_CHANGED = 10;
		GROUP_STARRED = 11;
		WEB_PUSH_NOTIFICATION = 12;
		GROUP_UNREAD_SUBSCRIBED_TOPIC_COUNT_UPDATED = 13;
		INVITE_COUNT_UPDATED = 14;
		MEMBERSHIP_CHANGED = 15;
		GROUP_HIDE_CHANGED = 16;
		DRIVE_ACL_FIX_PROCESSED = 17;
		GROUP_NOTIFICATION_SETTINGS_UPDATED = 18;
		RETENTION_SETTINGS_UPDATED = 19;
		TOPIC_CREATED = 20;
		ON_HOLD_MESSAGE_POSTED = 21;
		ON_HOLD_MESSAGE_UPDATED = 22;
		ON_HOLD_MESSAGE_PUBLISHED = 23;
		MESSAGE_REACTED = 24;
		USER_STATUS_UPDATED_EVENT = 25;
		GROUP_RETENTION_SETTINGS_UPDATED = 26;
		USER_WORKING_HOURS_UPDATED_EVENT = 27;
		MESSAGE_SMART_REPLIES = 28;
		TYPING_STATE_CHANGED = 29;
		GROUP_DELETED = 30;
		BLOCK_STATE_CHANGED = 31;
		CLEAR_HISTORY = 32;
		SESSION_READY = 33;
		GROUP_SORT_TIMESTAMP_CHANGED = 34;
		GSUITE_INTEGRATION_UPDATED = 35;
		READ_RECEIPT_CHANGED = 36;
		MARK_AS_UNREAD = 37;
		GROUP_NO_OP = 38;
		INVALIDATE_GROUP_CACHE = 39;
		USER_NO_OP = 40;
		INVALIDATE_USER_CACHE = 41;
		USER_DENORMALIZED_GROUP_UPDATED = 42;
		USER_PRESENCE_SHARED_UPDATED_EVENT = 43;
		NOTIFICATIONS_CARD_UPDATED = 44;
		USER_HUB_AVAILABILITY_UPDATED_EVENT = 45;
		USER_OWNERSHIP_UPDATED = 46;
		SHARED_DRIVE_CREATE_SCHEDULED = 47;
		SHARED_DRIVE_UPDATED = 48;
		MESSAGE_PERSONAL_LABEL_UPDATED = 49;
		USER_QUOTA_EXCEEDED = 50;
	}

	message EventBody {
		oneof Type {
			GroupViewedEvent group_viewed = 3;
			//TopicViewedEvent topic_viewed = 4;
			GroupUpdatedEvent group_updated = 5;
			MessageEvent message_posted = 6;
			//TopicMuteChangedEvent topic_mute_changed = 7;
			//UserSettingsChangedEvent user_settings_changed = 8;
			//GroupStarredEvent group_starred = 9;
			WebPushNotificationEvent web_push_notification = 10;
			//GroupUnreadSubscribedTopicCountUpdatedEvent group_unread_subscribed_topic_count_updated_event = 11;
			//InviteCountUpdatedEvent invite_count_updated = 13;
			MembershipChangedEvent membership_changed = 14;
			//GroupHideChangedEvent group_hide_changed = 15;
			//DriveAclFixProcessedEvent drive_acl_fix_processed = 16;
			//GroupNotificationSettingsUpdatedEvent group_notification_settings_updated = 17;
			MessageDeletedEvent message_deleted = 18;
			//RetentionSettingsUpdatedEvent retention_settings_updated = 19;
			//TopicCreatedEvent topic_created = 21;
			MessageReactionEvent message_reaction = 22;
			UserStatusUpdatedEvent user_status_updated = 23;
			//WorkingHoursSettingsUpdatedEvent working_hours_settings_updated_event = 24;
			//MessageSmartRepliesEvent message_smart_replies_event = 25;
			TypingStateChangedEvent typing_state_changed = 26;
			//GroupDeletedEvent group_deleted_event = 27;
			//BlockStateChangedEvent block_state_changed_event = 28;
			//ClearHistoryEvent clear_history_event = 29;
			//GroupSortTimestampChangedEvent group_sort_timestamp_changed_event = 30;
			//MarkAsUnreadEvent mark_as_unread_event = 32;
			ReadReceiptChangedEvent read_receipt_changed = 33;
			//GroupNoOpEvent group_no_op_event = 34;
			//UserNoOpEvent user_no_op_event = 35;
			//UserDenormalizedGroupUpdatedEvent user_denormalized_group_updated_event = 36;
			//NotificationsCardEvent notifications_card_event = 37;
			//?? user_hub_availability_event = 38;
			//PresenceSharedUpdatedEvent presence_shared_updated_event = 39;
			//UserOwnershipUpdatedEvent user_ownership_updated_event = 40;
			//SharedDriveCreateScheduledEvent shared_drive_create_scheduled_event = 41;
			//SharedDriveUpdatedEvent shared_drive_updated_event = 42;
			//MessagePersonalLabelUpdatedEvent message_personal_label_updated = 43;
		}

		EventType event_type = 12;
		int64 trace_id = 20;
	}

	EventType type = 3;
	EventBody body = 4; // This is the first event body

	UserId user_id = 5;
	oneof RevisionType {
			WriteRevision user_revision = 6;
			WriteRevision group_revision = 7;
	}
	repeated EventBody bodies = 8;  // This is the second and subsequent event bodies in this event
}





enum Platform {
	UNDEFINED_PLATFORM = 0;
	WEB = 1;
	MOBILE = 2;
	DRONE = 3;
	INTEROP_PRESENCE = 4;
	CLASSIC_DESKTOP = 5;
	CLASSIC_PHONE = 6;
	CLASSIC_UNKNOWN = 7;
	WEB_GMAIL = 8;
}

message InviteType {
	enum Type {
		UNKNOWN = 0;
		AT_MENTION = 1;
		DIRECT_ADD = 2;
	}
}

enum AnnotationType {
	ANNOTATION_TYPE_UNKNOWN = 0;
	URL = 1;
	DRIVE_FILE = 2;
	DRIVE_DOC = 3;
	DRIVE_SHEET = 4;
	DRIVE_SLIDE = 5;
	USER_MENTION = 6;
	VIDEO = 7;
	FORMAT_DATA = 8;
	IMAGE = 9;
	PDF = 10;
	VIDEO_CALL = 11;
	MEMBERSHIP_CHANGED = 12;
	UPLOAD_METADATA = 13;
	ROOM_UPDATED = 14;
	INVITATION = 15;
	SLASH_COMMAND = 16;
	GSUITE_INTEGRATION = 17;
	DRIVE_FORM = 18;
	GROUP_RETENTION_SETTINGS_UPDATED = 19;
	BABEL_PLACEHOLDER = 20;
	READ_RECEIPTS_SETTINGS_UPDATED = 21;
	INCOMING_WEBHOOK_CHANGED = 22;
	INTEGRATION_CONFIG_UPDATED = 23;
	CONSENTED_APP_UNFURL = 24;
}

message GroupDetails {
	string description = 1;
	string guidelines = 2;
}

message RoomUpdatedMetadata {
	string name = 2;
	GroupVisibility visibility = 3;
	bool group_link_sharing_enabled = 5;

	message RoomRenameMetadata {
		string new_name = 1;
		string prev_name = 2;
	}
	RoomRenameMetadata rename_metadata = 6;

	message GroupDetailsUpdatedMetadata {
		GroupDetails new_group_details = 1;
		GroupDetails prev_group_details = 2;
	}
	GroupDetailsUpdatedMetadata group_details_metadata = 7;
	User initiator = 4;
}

//ComGoogleRtcMeetingsV1DialInNumberClass
enum DialInNumberClass {
	NUMBER_CLASS_UNSPECIFIED = 0;
	LOW_COST = 1;
	HIGH_COST = 2;
	LEGACY = 3;
}

//ComGoogleRtcMeetingsV1RecordingApplicationType
enum RecordingApplicationType {
	RECORDING_APPLICATION_TYPE_UNSPECIFIED = 0;
	RECORDING = 1;
	GLIVE_STREAM = 3;
	BROADCAST = 4;
}

//ComGoogleRtcMeetingsV1BroadcastAccessPolicy
enum BroadcastAccessPolicy {
	BROADCASTING_ACCESS_POLICY_UNSPECIFIED = 0;
	ORGANIZATION = 1;
	PUBLIC = 2;
}

//ComGoogleRtcMeetingsV1MeetingSpace
message MeetingSpace {
	string meeting_space_id = 1;
	string meeting_code = 2;
	string meeting_url = 3;

	message PhoneAccess {
		string phone_number = 1;
		string formatted_phone_number = 5;
		string pin = 2;
		string region_code = 3;
		string language_code = 4;
	}
	repeated PhoneAccess phone_access = 5;

	message UniversalPhoneAccess {
		string pin = 1;
		string pstn_info_url = 2;
	}
	UniversalPhoneAccess universal_phone_access = 8;

	message Presenter {
		string presenter_device_id = 1;
		string by_device_id = 2;
	}
	message RecordingInfo {
		enum RecordingStatus {
			RECORDING_UNSPECIFIED = 0;
			RECORDING_INACTIVE = 1;
			RECORDING_STARTING = 2;
			RECORDING_STARTED = 3;
		}
		RecordingStatus recording_status = 1;
		string recording_id = 2;
		string producer_device_id = 3;

		message RecordingEvent {
			string device_id = 1;

			enum EventType {
				RECORDING_EVENT_UNSPECIFIED = 0;
				USER_ACTION = 1;
			}
			EventType type = 2;
		}
		RecordingEvent latest_recording_event = 4;
		string owner_display_name = 5;
		RecordingApplicationType recording_application_type = 6;
	}
	message StreamingSessionInfo {
		enum Status {
			STATUS_UNSPECIFIED = 0;
			INACTIVE = 1;
			STARTING = 2;
			LIVE = 3;
		}
		Status status = 1;
		string session_id = 2;
		RecordingApplicationType application_type = 3;

		message SessionEvent {
			enum EventType {
				EVENT_UNSPECIFIED = 0;
			}
			string device_id = 1;
			EventType type = 2;
		}
		SessionEvent latest_session_event = 4;
		string owner_display_name = 5;
		BroadcastAccessPolicy viewer_access_policy = 6;
		bool training_enabled = 7;

		message StreamViewerStats {
			int64 estimated_viewer_count = 1;
		}
		StreamViewerStats viewer_stats = 8;
	}
	message CallInfo {
		Presenter presenter = 1;
		RecordingInfo recording_info = 2;
		string calendar_event_id = 3;
		string organization_name = 4;
		int32 max_joined_devices = 6;
		string media_backend_info = 8;
		repeated StreamingSessionInfo streaming_sessions = 9;

		message CallSettings {
			bool access_lock = 1;
			bool chat_lock = 2;
			bool present_lock = 3;
			bool attendance_report_enabled = 4;
			bool audio_lock = 5;
			bool video_lock = 6;
			bool moderation_enabled = 7;
			bool cse_enabled = 8;
		}
		CallSettings settings = 11;
		//repeated ComGoogleRtcMeetingsV1DocumentInfo attached_documents = 12;
		message PaygateInfo {
			bool show_upgrade_promos = 1;
			ComGoogleProtobufTimestamp call_ending_soon_warning_time = 2;
			ComGoogleProtobufTimestamp call_ending_time = 3;
		}
		PaygateInfo paygate_info = 13;
		repeated string supported_caption_languages = 14;

		message CseInfo {
			bytes wrapped_key = 1;
		}
		CseInfo cse_info = 15;
	}
	CallInfo call_info = 6;
	string meeting_alias = 7;

	message GatewayAccess {
		bool enabled = 1;
	}
	GatewayAccess gateway_access = 9;
	string more_join_url = 10;
	repeated DialInNumberClass accepted_number_class = 11;

	message GatewaySipAccess {
		string uri = 1;
		string sip_access_code = 2;
	}
	repeated GatewaySipAccess gateway_sip_access = 13;

	message BroadcastAccess {
		string view_url = 1;
		//ComGoogleRtcMeetingsV1BroadcastAccessPolicy access_policy = 2;
	}
	BroadcastAccess broadcast_access = 14;

	message Settings {
		bool access_lock = 1;
		bool attendance_report_enabled = 2;
		bool chat_lock = 3;
		bool present_lock = 4;
		bool moderation_enabled = 5;
		bool cse_enabled = 6;
	}
	Settings settings = 15;
}

message VideoCallMetadata {
	MeetingSpace meeting_space = 1;
	bool was_created_in_current_group = 2;
	bool should_not_render = 3;
}

message MembershipChangedMetadata {
	enum Type {
		TYPE_UNSPECIFIED = 0;
		INVITED = 1;
		JOINED = 2;
		ADDED = 3;
		REMOVED = 4;
		LEFT = 5;
		BOT_ADDED = 6;
		BOT_REMOVED = 7;
		KICKED_DUE_TO_OTR_CONFLICT = 8;
		ROLE_UPDATED = 9;
	}

	message AffectedMembership {
		MemberId affected_member = 1;
		MembershipState prior_membership_state = 2;
		MembershipRole prior_membership_role = 3;
		MembershipRole target_membership_role = 4;
	}

	Type type = 1;
	repeated AffectedMembership affected_memberships = 6;
	UserId initiator = 2;
	repeated MemberId affected_members = 3;
	User initiator_profile = 4;
	repeated Member affected_member_profiles = 5;
}

message UserMentionMetadata {
	enum Type {
		TYPE_UNSPECIFIED = 0;
		INVITE = 1;
		UNINVITE = 2;
		MENTION = 3;
		MENTION_ALL = 4;
		FAILED_TO_ADD = 5;
	}
	UserId id = 1;
	InviteeInfo invitee_info = 3;
	Type type = 2;
	string display_name = 4;
	string gender = 5;
}

message SlashCommandMetadata {
	enum Type {
		TYPE_UNSPECIFIED = 0;
		ADD = 1;
		INVOKE = 2;
		FAILED_TO_ADD = 3;
	}
	UserId id = 1;
	Type type = 2;
	string command_name = 3;
	int64 command_id = 4;
	string arguments_hint = 5;
	bool triggers_dialog = 6;
}

message GroupVisibility {
	enum VisibilityState {
		UNKNOWN = 0;
		PRIVATE = 1;
		PUBLIC = 2;
	}
}

enum CallStatus {
	UNKNOWN_CALL_STATUS = 0;
	ACTIVE_CALL = 1;
	ENDED_CALL = 2;
}

enum RingStatus {
	UNKNOWN_RING_STATUS = 0;
	RINGING = 1;
	JOINED = 2;
	MISSED = 3;
}


enum UserAccountState {
	USER_ACCOUNT_STATE_UNKNOWN = 0;
	ENABLED = 1;
	DISABLED = 2;
	DELETED = 3;
	TEMPORARY_UNAVAILABLE = 4;
}


enum MembershipRole {
	ROLE_UNKNOWN = 0;
	ROLE_NONE = 1;
	ROLE_INVITEE = 2;
	ROLE_MEMBER = 3;
	ROLE_OWNER = 4;
}




enum AppType {
	APP_TYPE_UNSPECIFIED = 0;
	APP = 1;
	GSUITE_APP = 2;
	INCOMING_WEBHOOK = 3;
}

enum MembershipState {
	MEMBER_UNKNOWN = 0;
	MEMBER_INVITED = 1;
	MEMBER_JOINED = 2;
	MEMBER_NOT_A_MEMBER = 3;
	MEMBER_FAILED = 4;
}

message ComGoogleProtobufTimestamp {
	int64 seconds = 1;
	int32 nanos = 2;
}

message GetServerTimeRequest {
	RequestHeader request_header = 100;
}

message GetServerTimeResponse {
	ComGoogleProtobufTimestamp timestamp = 1;
}


message CatchUpRange {
	int64 from_revision_timestamp = 1;
	int64 to_revision_timestamp = 2;
}

message CatchUpGroupRequest {
	RequestHeader request_header = 100;
	GroupId group_id = 1;
	CatchUpRange range = 2;
	int32 page_size = 3;
	int32 cutoff_size = 4;
}

message CatchUpUserRequest {
	RequestHeader request_header = 100;
	CatchUpRange range = 1;
	int32 page_size = 2;
	int32 cutoff_size = 3;
}

// Used by both CatchUpGroupRequest and CatchUpUserRequest
message CatchUpResponse {
	repeated Event events = 1;
	enum ResponseStatus {
		UNKNOWN = 0;
		COMPLETED = 1;
		PAGINATED = 2;
		ABORTED_CUTOFF_EXCEEDED = 3;
		ABORTED_CACHE_INVALIDATION = 4;
		ABORTED_FROM_REVISION_TOO_OLD = 5;
	}
	ResponseStatus status = 2;
	GroupData group_data = 3;
}

message GetGroupRequest {
	RequestHeader request_header = 100;
	GroupId group_id = 1;
	enum FetchOptions {
		MEMBERS = 0;
		INVITEES = 1;
		MEMBER_IDS_ONLY = 2;
		PROFILE_IN_READ_RECEIPTS = 3;
		INCLUDE_SNIPPET = 4;
		INCLUDE_DYNAMIC_GROUP_NAME = 5;
		INCLUDE_ACCOUNT_USER_CAPABILITIES = 6;
	}
	repeated FetchOptions fetch_options = 4;
	ReferenceRevision user_not_older_than = 2;
	ReferenceRevision group_not_older_than = 3;
	bool include_invite_dms = 5;
}

message GetGroupResponse {
	Group group = 1;
	repeated Membership memberships = 4;
	ReadRevision user_revision = 2;
	ReadRevision group_revision = 3;
	MembershipState membership_state = 6;
	repeated MemberId joined_member_ids = 7;
	repeated MemberId invited_member_ids = 8;
	ReadReceiptSet read_receipt_set = 9;
	Message snippet = 10;
	// repeated ?? capabilities = 11;
}

message WorldSection {
	enum WorldSectionType {
		WORLD_SECTION_TYPE_UNSPECIFIED = 0;
		STARRED_DIRECT_MESSAGE_PEOPLE = 1;
		STARRED_ROOMS = 2;
		STARRED_DIRECT_MESSAGE_BOTS = 3;
		NON_STARRED_DIRECT_MESSAGE_PEOPLE = 4;
		NON_STARRED_ROOMS = 5;
		NON_STARRED_DIRECT_MESSAGE_BOTS = 6;
		ALL_DIRECT_MESSAGE_PEOPLE = 7;
		ALL_ROOMS = 8;
		ALL_DIRECT_MESSAGE_BOTS = 9;
		INVITED_DM_PEOPLE = 10;
		SPAM_INVITED_DM_PEOPLE = 11;
		STARRED_DIRECT_MESSAGE_EVERYONE = 12;
		NON_STARRED_DIRECT_MESSAGE_EVERYONE = 13;
		ALL_DIRECT_MESSAGE_EVERYONE = 14;
		STARRED_DMS_AND_STARRED_UNNAMED_ROOMS = 15;
		NON_STARRED_DMS_AND_NON_STARRED_UNNAMED_ROOMS = 16;
	}
	WorldSectionType world_section_type = 1;
}

message WorldFilter {
	enum StarredState {
		STARRED_STATE_UNSPECIFIED = 0;
		STARRED = 1;
		NON_STARRED = 2;
	}
	StarredState starred_state = 1;

	enum VisibilityState {
		VISIBILITY_STATE_UNSPECIFIED = 0;
		VISIBLE = 1;
		HIDDEN = 2;
	}
	VisibilityState visibility_state = 2;

	enum ReadState {
		READ_STATE_UNSPECIFIED = 0;
		READ = 1;
		UNREAD = 2;
		UNREAD_SUBSCRIBED_TOPIC = 3;
	}
	ReadState read_state = 7;

	enum BlockState {
		BLOCK_STATE_UNSPECIFIED = 0;
		BLOCKED = 1;
		UNBLOCKED = 2;
	}
	BlockState block_state = 8;

	enum NamedState {
		NAMED_STATE_UNSPECIFIED = 0;
		NAMED = 1;
		UNNAMED = 2;
	}
	NamedState named_state = 9;

	MembershipState membership_state = 3;
	InviteCategory invite_category = 4;

	enum MemberType {
		MEMBER_TYPE_UNSPECIFIED = 0;
		HUMAN = 1;
		BOT = 2;
	}
	MemberType member_type = 5;

	enum GroupType {
		GROUP_TYPE_UNSPECIFIED = 0;
		DM = 1;
		ROOM = 2;
	}
	GroupType group_type = 6;
}

message NameUsers {
	repeated UserId name_user_ids = 1;
	bool has_more_name_users = 2;
	string group_name = 3;
}

message WorldItemLite {
	GroupId group_id = 1;
	ReadRevision group_revision = 2;
	int64 sort_timestamp = 3;
	GroupReadState read_state = 4;
	string room_name = 5;
	message MembershipLite {
		UserId user_id = 1;
		MembershipState membership_state = 2;
	}
	message DmMembers {
		repeated UserId members = 1;
		repeated MembershipLite memberships = 2;
		bool has_all_memberships = 3;
	}
	DmMembers dm_members = 6;
	NameUsers name_users = 20;
	int64 retention_horizon_time_micros = 8;
	int64 retention_duration_seconds = 9;
	message GroupLite {
		UserId creator_id = 1;
		int64 create_time = 2;
		bool is_flat = 3;
		RetentionSettings retention_settings = 4;
		bool interop_enabled = 5;
		//DasherDomainPolicies dasher_domain_policies = 6;
		string roster_email = 7;
		GroupDetails group_details = 8;
	}
	GroupLite group_lite = 7;
	//GroupGuestAccessSettings group_guest_access_settings = 10;
	//OrganizationInfo organization_info = 11;
	//repeated GsuiteIntegration gsuite_integration = 12;
	Message message = 13;
	bool is_message_blocked = 25;
	message FlatGroup {

	}
	FlatGroup flat_group = 14;
	message ThreadedGroup {

	}
	ThreadedGroup threaded_group = 15;
	string avatar_url = 16;
	//repeated ?? space_integration_payloads = 17;
	//GroupIntegrationSettings group_integration_settings = 22;
	// AvatarInfo avatar_info = 18;
	SharedAttributeCheckerGroupType attribute_checker_group_type = 19;
	GroupSupportLevel group_support_level = 23;
	GroupUnsupportedReason group_unsupported_reason = 24;
	// ?? group_policies = 26;
	bool flat_threads_enabled = 27;
}

message WorldSectionRequest {
	int32 page_size = 1;
	WorldSection world_section = 2;
	WorldFilter world_filter = 4;
	int32 num_world_items_with_snippet = 5;
	int64 anchor_sort_timestamp_micros = 3;
	oneof Pagination {
		string pagination_token = 6;
		// SortingOrder sorting_order = 7;
	}
}

message WorldSectionResponse {
	WorldSection world_section = 1;
	WorldFilter world_filter = 4;
	repeated WorldItemLite world_items = 2;
	int64 next_page_anchor_sort_timestamp_micros = 3;
	bool has_more_items = 5;
	string pagination_token = 6;
}

message PaginatedWorldRequest {
	RequestHeader request_header = 1;
	repeated WorldSectionRequest world_section_requests = 2;
	string world_consistency_token = 3;
	enum FetchOptions {
		UNKNOWN = 0;
		EXCLUDE_GROUP_LITE = 1;
		FETCH_BOTS_IN_HUMAN_DM = 2;
		FETCH_SPACE_INTEGRATION_PAYLOADS = 3;
		FETCH_GROUPS_D3_POLICIES = 4;
	}
	repeated FetchOptions fetch_options = 4;
	bool fetch_from_user_spaces = 5;
	bool receive_world_update_notifications = 6;
	bool fetch_snippets_for_unnamed_rooms = 7;
}

message PaginatedWorldResponse {
	repeated WorldSectionResponse world_section_responses = 1;
	string world_consistency_token = 2;
	ReadRevision user_revision = 3;
	repeated WorldItemLite world_items = 4;
}

message RemoveMembershipsRequest {
	RequestHeader request_header = 100;
	repeated MemberId member_ids = 1;
	GroupId group_id = 2;
	MembershipState membership_state = 3;
}

message RemoveMembershipResult {
	RequestHeader request_header = 100;
	MemberId member_id = 1;
	// FailureReason reason = 2;
	// repeated RosterId attached_roster_ids = 3;
	repeated string attached_roster_names = 4;
}

message RemoveMembershipsResponse {
	repeated RemoveMembershipResult results = 1;
	// repeated RosterId roster_ids_without_view_acls = 2;
	RetentionSettings retention_settings = 3;
	WriteRevision retention_settings_group_revision = 4;
}


message HideGroupRequest {
	RequestHeader request_header = 100;
	GroupId id = 1;
	bool hide = 2;
}

message HideGroupResponse {
	GroupReadState read_state = 1;
	WriteRevision user_revision = 3;
}

message InviteNotificationSettings {
	enum NotificationOption {
		UNSPECIFIED = 0;
		EMAIL_NOTIFICATION = 1;
	}
	repeated NotificationOption option = 1;
}

message CreateMembershipRequest {
	RequestHeader request_header = 100;
	repeated MemberId member_ids = 2;
	repeated InviteeMemberInfo invitee_member_infos = 8;
	MembershipState membership_state = 3;
	GroupId group_id = 4;
	InviteNotificationSettings notification_settings = 5;
}

message CreateMembershipResponse {
	repeated CreateMembershipResult results = 2;
	repeated WriteRevision group_revision = 4;
	RetentionSettings retention_settings = 5;
	WriteRevision retention_settings_group_revision = 6;
}

message MarkGroupReadstateRequest {
	RequestHeader request_header = 100;
	GroupId id = 1;
	int64 last_read_time = 2;
}

message MarkGroupReadstateResponse {
	GroupReadState read_state = 1;
	WriteRevision user_revision = 2;
}

message SetPresenceSharedRequest {
	RequestHeader request_header = 100;
	bool presence_shared = 1;
}

message SetPresenceSharedResponse {
	UserStatus user_status = 1;
	WriteRevision user_revision = 2;
}

message SetDndDurationRequest {
	RequestHeader request_header = 100;
	enum State {
		UNKNOWN = 0;
		AVAILABLE = 1;
		DND = 2;
	}
	State current_dnd_state = 2;

	oneof DndExpiry {
		int64 new_dnd_duration_usec = 1;
		int64 dnd_expiry_timestamp_usec = 3;
	}
}

message SetDndDurationResponse {
	UserStatus user_status = 1;
	WriteRevision user_revision = 2;
}

message UpdateGroupRequest {
	RequestHeader request_header = 100;
	SpaceId space_id = 1;
	enum UpdateMask {
		UPDATE_MASK_UNSPECIFIED = 0;
		NAME = 1;
		VISIBILITY = 2;
		AVATAR_INFO = 3;
		SPACE_DETAILS = 4;
		SHARED_DRIVE = 5;
	}
	repeated UpdateMask update_masks = 4;
	string name = 2;
	GroupVisibility visibility = 5;
	// AvatarInfo avatar_info = 6;
	// ?? space_details = 7;
}

message UpdateGroupResponse {
	Group group = 1;
	WriteRevision group_revision = 2;
}

message BlockEntityRequest {
	RequestHeader request_header = 100;
	oneof Entity {
		UserId user_id = 1;
		GroupId group_id = 2;
	}
	bool blocked = 3;
	bool reported = 4;
}

message BlockEntityResponse {
	GroupReadState read_state = 1;
	WriteRevision user_revision = 2;
}

message SetCustomStatusRequest {
	RequestHeader request_header = 100;
	CustomStatus custom_status = 1;
	oneof CustomStatusTiming {
		int64 custom_status_expiry_timestamp_usec = 2;
		int64 custom_status_remaining_duration_usec = 3;
	}
}

message SetCustomStatusResponse {
	UserStatus user_status = 1;
	WriteRevision user_revision = 2;
}

message WriteRevision {
	int64 timestamp = 1;
	int64 prev_timestamp = 2;
}

message ReadRevision {
	int64 timestamp = 1;
}

message ReferenceRevision {
	int64 timestamp = 1;
}

enum SharedAttributeCheckerGroupType {
	ATTRIBUTE_CHECKER_GROUP_TYPE_UNSPECIFIED = 0;
	ONE_TO_ONE_HUMAN_DM = 1;
	ONE_TO_ONE_BOT_DM = 2;
	IMMUTABLE_MEMBERSHIP_GROUP_DM = 3;
	FLAT_ROOM = 4;
	THREADED_ROOM = 5;
	IMMUTABLE_MEMBERSHIP_HUMAN_DM = 6;
	POST_ROOM = 7;
}
